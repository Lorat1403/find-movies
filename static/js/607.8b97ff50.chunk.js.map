{"version":3,"file":"static/js/607.8b97ff50.chunk.js","mappings":"kRAEaA,EAAcC,EAAAA,GAAAA,GAAH,+EAEH,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAITC,EAAWJ,EAAAA,GAAAA,GAAH,+EAEA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,SCyBtB,EA9BgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OAPAE,EAAAA,EAAAA,YAAU,YACR,mCAAC,qGAC2BC,EAAAA,EAAAA,IAAWH,GADtC,OACOI,EADP,OAECL,EAAWK,GAFZ,2CAAD,sDAID,GAAE,CAACJ,KAGF,wBACsB,IAAnBF,EAAQO,OACPP,EAAQQ,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACzB,OACE,UAACb,EAAD,YACE,UAACL,EAAD,sBAAsBiB,MACtB,uBAAIC,MAFSF,EAKlB,KAED,sEAIP,C,mMChCKG,EAAU,mCAIhBC,EAAAA,EAAAA,SAAAA,QAAA,gCAEO,IAAMC,EAAkB,mCAAG,6GAEPD,EAAAA,EAAAA,IAAA,mBAPR,QAOQ,YANP,OAM0D,CACxEE,OAAQ,CACNC,QAASJ,KAJiB,cAExBK,EAFwB,yBAOvBA,EAASC,KAAKC,SAPS,gCAS9BC,QAAQC,IAAR,MAT8B,yDAAH,qDAalBC,EAAY,mCAAG,WAAMpB,GAAN,yFAElBqB,EAAKC,OAAOtB,GAFM,SAGDW,EAAAA,EAAAA,IAAA,gBAAmBU,GAAM,CAC9CR,OAAQ,CACNC,QAASJ,KALW,cAGlBK,EAHkB,yBAQjBA,EAASC,MARQ,gCAUxBE,QAAQC,IAAR,MAVwB,yDAAH,sDAcZI,EAAO,mCAAG,WAAMhB,GAAN,gGAEII,EAAAA,EAAAA,IAAA,gBAAmBJ,EAAnB,YAAiC,CACtDM,OAAQ,CACNC,QAASJ,KAJM,cAEbK,EAFa,yBAOZA,EAASC,KAAKQ,MAPF,gCASnBN,QAAQC,IAAR,MATmB,yDAAH,sDAaPhB,EAAU,mCAAG,WAAMI,GAAN,gGAECI,EAAAA,EAAAA,IAAA,gBAAmBJ,EAAnB,YAAiC,CACtDM,OAAQ,CACNC,QAASJ,KAJS,cAEhBK,EAFgB,yBAOfA,EAASC,KAAKC,SAPC,gCAStBC,QAAQC,IAAR,MATsB,yDAAH,sDAaVM,EAAgB,mCAAG,WAAMC,GAAN,gGAELf,EAAAA,EAAAA,IAAA,eAA0B,CAC/CE,OAAQ,CACNC,QAASJ,EACTgB,MAAAA,KALwB,cAEtBX,EAFsB,yBAQrBA,EAASC,KAAKC,SARO,gCAU5BC,QAAQC,IAAR,MAV4B,yDAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/getMoviesAndInfo.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewTitle = styled.h3`\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[3]}px;\n  }\n`;\n\nexport const ListItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: ${p => p.theme.space[4]}px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'services/getMoviesAndInfo';\nimport { ListItem, ReviewTitle } from './Reviews.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    (async function getReviewsInfo() {\n      const reviewsInfo = await getReviews(movieId);\n      setReviews(reviewsInfo);\n    })();\n  }, [movieId]);\n\n  return (\n    <ul>\n      {reviews.length !== 0 ? (\n        reviews.map(({ id, author, content }) => {\n          return (\n            <ListItem key={id}>\n              <ReviewTitle>Author: {author}</ReviewTitle>\n              <p>{content}</p>\n            </ListItem>\n          );\n        })\n      ) : (\n        <b>We don't have any reviews for this movie.</b>\n      )}\n    </ul>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nconst API_KEY = '6d25a4756e0ff1ccca3eba13a74efa5c';\nconst MEDIA_TYPE = 'movie';\nconst TIME_WINDOW = 'day';\n\naxios.defaults.baseURL = `https://api.themoviedb.org/3/`;\n\nexport const fetchTrendingToday = async () => {\n  try {\n    const response = await axios.get(`trending/${MEDIA_TYPE}/${TIME_WINDOW}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieById = async movieId => {\n  try {\n    const ID = Number(movieId);\n    const response = await axios.get(`movie/${ID}`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getCast = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/credits`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.cast;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getReviews = async id => {\n  try {\n    const response = await axios.get(`movie/${id}/reviews`, {\n      params: {\n        api_key: API_KEY,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieBySearch = async query => {\n  try {\n    const response = await axios.get(`search/movie`, {\n      params: {\n        api_key: API_KEY,\n        query,\n      },\n    });\n    return response.data.results;\n  } catch (error) {\n    console.log(error);\n  }\n};\n"],"names":["ReviewTitle","styled","p","theme","space","ListItem","useState","reviews","setReviews","movieId","useParams","useEffect","getReviews","reviewsInfo","length","map","id","author","content","API_KEY","axios","fetchTrendingToday","params","api_key","response","data","results","console","log","getMovieById","ID","Number","getCast","cast","getMovieBySearch","query"],"sourceRoot":""}